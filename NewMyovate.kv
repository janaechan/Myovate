#: import NoTransition kivy.uix.screenmanager.NoTransition
#:import Factory kivy.factory.Factory

<Row>:
    id: row
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 1)
        Rectangle:
            size: self.size
            pos: self.pos
    sensor_name: ''
    sensor_loc: ''
    but_mapping: ''

    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: 'Sensor Name: ' + root.sensor_name
            size_hint: [1, .2]
        Button:
            text: "Remove Sensor"
            size_hint: [0.5, .2]
            on_press:
                root.remove(root)
                Factory.ConfirmDeletePopup().open()

        Button:
            text: "Edit Sensor"
            size_hint: [0.5, .2]
            on_press:
                Factory.AddSensorPopup(root).open()
    BoxLayout:
        orientation: 'horizontal'
        size_hint: [1, .2]
        Label:
            text: 'Sensor Location: ' + root.sensor_loc
        Label:
            text: 'Mapped to: ' + root.but_mapping

    BoxLayout:
        Graph:
            id: graph
            xlabel: ""
            ylabel: "Level"
            x_ticks_minor:5
            x_tics_major:25
            y_ticks_major:50
            x_grid: True
            y_grid: True
            padding: 5
            pos: root.pos
        BoxLayout:
            orientation: 'vertical'
            size_hint: [0.5, .5]
            Button:
                text: "START"
                bold: True
                on_press: root.start()
            Button:
                text: "STOP"
                bold: True
                on_press: root.stop()


<ProgressRow@BoxLayout>:
    canvas.before:
        Color:
            rgba: 0.5, 0.5, 0.5, 1
        Rectangle:
            size: self.size
            pos: self.pos
    value: ''
    Label:
        text: root.value

ScreenManagement:
    transition: NoTransition()
    MainScreen:
        id: main
        name: "main"
    StartSessionScreen:
        id: start_session
        name: "start_session"
    RunningSessionScreen:
        id: running_session
        name: "running_session"
    ProgressScreen:
        id: progress
        name: "progress"

<DropDownMenu>:
    Button:
        on_release: app.root.current = "main"
        on_press: app.root.drop_down.dismiss()
        text: "Back Home"
        size_hint_y: None
        size_y: 48

    Button:
        on_release: app.root.current = "progress"
        on_press: app.root.drop_down.dismiss()
        text: "Progress Report"
        size_hint_y: None
        size_y: 48

    Button:
        on_release: app.root.current = "start_session"
        on_press: app.root.drop_down.dismiss()
        text: "Start Session"
        size_hint_y: None
        size_y: 48

    Button:
        on_release: app.root.current = "running_session"
        on_press: app.root.drop_down.dismiss()
        text: "Current Session"
        size_hint_y: None
        size_y: 48

<CalibrationSetupPopup>:
    id: calibration_setup_pop
    size_hint: 0.6, 0.6
    auto_dismiss: False
    FloatLayout:
        Label:
            text:"Step 1: Place the red sensor on the targeted muscle"
            pos_hint: {'center_x': 0.5, 'center_y': 0.7}
        Label:
            text:"Step 2: Place the black sensor on a nearby bone"
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}

        Button:
            pos: self.parent.pos
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Click here to dismiss'
            on_press:
                calibration_setup_pop.dismiss()
                print(self.parent.pos[0])
        Button:
            pos: (self.parent.pos[0] + self.parent.width/2, self.parent.pos[1])
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Next'
            on_press:
                calibration_setup_pop.dismiss()
                Factory.CalibrationRelaxPopup().open()


<CalibrationRelaxPopup>:
    id: calibration_relax_pop
    cp: cp
    size_hint: 0.6, 0.6
    auto_dismiss: False
    r_cal: relax_calibration
    on_open: root.puopen()
    FloatLayout:
        Label:
            text: "Please relax your muscle until progress bar full."
            pos_hint: {'center_x': 0.5, 'center_y': 0.7}
        Label:
            id: relax_calibration
            text: "Calibration in progress ..."
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}
        ProgressBar:
            id: cp
            pos_hint: {'center_x': 0.5, 'center_y': 0.4}
            max: 100
            value: 0


        Button:
            pos: self.parent.pos
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Click here to dismiss'
            on_press:
                calibration_relax_pop.dismiss()
                print(self.parent.pos[0])
        Button:
            pos: (self.parent.pos[0] + self.parent.width/2, self.parent.pos[1])
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Next'
            on_press:
                calibration_relax_pop.dismiss()
                Factory.CalibrationContractPopup().open()

<CalibrationContractPopup>:
    id: calibration_contract_pop
    cp: cp
    size_hint: 0.6, 0.6
    c_cal: contract_calibration
    auto_dismiss: False
    on_open: root.puopen()
    FloatLayout:
        Label:
            text: "Contract targeted muscle as much as possible and wait until\nthe progress bar is filled"
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.7}
        Label:
            id: contract_calibration
            text: "Calibration in progress ..."
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}
        ProgressBar:
            id: cp
            pos_hint: {'center_x': 0.5, 'center_y': 0.4}
            max: 100
            value: 0

        Button:
            pos: self.parent.pos
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Click here to dismiss'
            on_press: calibration_contract_pop.dismiss()
        Button:
            pos: (self.parent.pos[0] + self.parent.width/2, self.parent.pos[1])
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Next'
            on_press:
                calibration_contract_pop.dismiss()
                Factory.CalibrationCompletePopup().open()

<CalibrationCompletePopup>:
    id: calibration_complete_pop
    size_hint: 0.6, 0.6
    auto_dismiss: False
    BoxLayout:
        orientation: 'vertical'
        Label:
            text: "Calibration Complete. Session ready to begin."
        Button:
            text: 'Exit'
            on_press:
                calibration_complete_pop.dismiss()

<AddSensorPopup>:
    id: add_sensor_pop
    size_hint: 0.6, 0.6
    auto_dismiss: False
    title: ''
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    on_open:
        print("Sensor Name box pos: ")
        print(sensor_name_box.pos)
        print("dismiss button pos:")
        print(dismiss_but.pos)
    FloatLayout:
        BoxLayout:
            id: sensor_name_box
            orientation: 'horizontal'
            pos: (self.parent.pos[0], 400)

            Label:
                id: sensor_name_id
                text: "Sensor Name"
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: sensor_name_input
                text: root.rv_data[root.index]['sensor_name'] if root.rv_data else ''
                height: self.minimum_height
                width: self.parent.width - sensor_name_id.width
                size_hint: None, None
        BoxLayout:
            id: date_box
            orientation: 'horizontal'
            pos: (self.parent.pos[0], sensor_name_box.pos[1] - sensor_name_id.height - dp(10))
            Label:
                id: date_id
                text: "Date"
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: date_input
                text: root.rv_data[root.index]['sensor_name'] if root.rv_data else root.date
                height: self.minimum_height
                width: self.parent.width - date_id.width
                size_hint: None, None
        BoxLayout:
            id: sensor_loc_box
            orientation: 'horizontal'
            pos: (self.parent.pos[0], date_box.pos[1] - date_id.height - dp(10))
            Label:
                id: sensor_loc_id
                text: "Sensor Muscle Location"
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: sensor_loc_input
                text: root.rv_data[root.index]['sensor_loc'] if root.rv_data else ''
                height: self.minimum_height
                width: self.parent.width - sensor_loc_id.width
                size_hint: None, None
        BoxLayout:
            id: but_map_box
            orientation: 'horizontal'
            pos: (self.parent.pos[0], sensor_loc_box.pos[1] - sensor_loc_id.height - dp(10))
            Label:
                id: but_mapping_id
                text: "Map to: "
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: but_mapping_input
                text: root.rv_data[root.index]['but_mapping'] if root.rv_data else ''
                height: self.minimum_height
                width: self.parent.width - but_mapping_id.width
                size_hint: None, None
        BoxLayout:
            id: but_map_box
            orientation: 'horizontal'
            pos: (self.parent.pos[0], sensor_loc_box.pos[1] - sensor_loc_id.height - dp(10))
            Label:
                id: channel_id
                text: "Sensor Channel: "
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: channel_input
                text: root.rv_data[root.index]['but_mapping'] if root.rv_data else ''
                height: self.minimum_height
                width: self.parent.width - but_mapping_id.width
                size_hint: None, None
        Button:
            id: dismiss_but
            pos: self.parent.pos
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Click here to dismiss'
            on_press:
                add_sensor_pop.dismiss()
                print(sensor_name_box.pos)
        Button:
            pos: (self.parent.pos[0] + self.parent.width/2, self.parent.pos[1])
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Calibrate Sensor'
            on_press:
                add_sensor_pop.dismiss()
                app.root.get_screen('start_session').insert(sensor_name_input.text, sensor_loc_input.text, but_mapping_input.text)
                Factory.CalibrationSetupPopup().open()

<ConfirmDeletePopup>:
    id: confirm_delete_popup
    size_hint: 0.6, 0.6
    auto_dismiss: False
    title: ''
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    FloatLayout:
        Label:
            text: "Confirm removing sensor:"
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

        Button:
            pos: self.parent.pos
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Yes'
            on_press:
                confirm_delete_popup.dismiss()
        Button:
            pos: (self.parent.pos[0] + self.parent.width/2, self.parent.pos[1])
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'No'
            on_press:
                confirm_delete_popup.dismiss()
<MainScreen>:
    BoxLayout:
        orientation: 'vertical'
        Button:
            id: btn
            text: 'Menu'
            on_release: app.root.drop_down.open(self)
            size_hint_y: None
            height: '48dp'
        Label:
            text: "[b] MYOVATE [/b]"
            font_size: min(root.height, root.width) / 10
            markup: True
            size_hint_y: 0.3

<StartSessionScreen>:
    rv: rv
    BoxLayout:
        orientation: 'vertical'

        Button:
            id: btn
            text: 'Menu'
            on_release: app.root.drop_down.open(self)
            size_hint_y: None
            height: '48dp'
        Label:
            text: 'Complete all boxes to start a session.'
            size_hint_y: None
            height: '60dp'
        BoxLayout:
            id: session_name_box
            orientation: 'horizontal'
            #size_hint_y: None
            #height: '48dp'
            size_hint: [1, 0.2]
            Label:
                id: session_name_id
                text: "Session Name"
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: session_name_input
                height: self.minimum_height
                width: self.parent.width - session_name_id.width
                size_hint: None, None
        BoxLayout:
            id: session_date_box
            orientation: 'horizontal'
            size_hint: [1, 0.2]
            Label:
                id: session_date_id
                text: "Date"
                height: self.texture_size[1] + dp(10)
                width: self.parent.width/4 + dp(10)
                size_hint: None, None
            TextInput:
                id: session_date_input
                text: root.session_date
                height: self.minimum_height
                width: self.parent.width - session_date_id.width
                size_hint: None, None
        Button:
            text: 'Add New Sensor'
            size_hint_y: None
            height: '48dp'
            # on_press: root.insert(new_item_input.text, sensor_loc_input.text)
            on_release: root.add_sensor_popup.open()

        RecycleView:
            id: rv
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(10)
            viewclass: 'Row'
            SelectableRecycleBoxLayout:
                default_size: None, dp(150)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(20)
                touch_multiselect: True
        Button:
            text: "Save Session"
            size_hint_y: None
            height: '48dp'
            on_press: root.manager.get_screen('progress').insert(session_name_input.text, rv.data)

<RunningSessionScreen>:
    FloatLayout:
        Button:
            id: btn
            text: 'Menu'
            on_release: app.root.drop_down.open(self)
            size_hint:1,0.075
            pos_hint:{"left":1,"top":1}
        Label:
            text: 'Current Running Session'
            pos_hint: {"center_x":0.5,"center_y":0.9}

<ProgressScreen>:
    rv_progress: rv_progress
    BoxLayout:
        orientation: 'vertical'
        Button:
            id: btn
            text: 'Menu'
            on_release: app.root.drop_down.open(self)
            size_hint_y: None
            height: '48dp'
        Button:
            on_release: root.print_log()
            text: "PRINT PROGRESS LOG"
            font_size: 20

        RecycleView:
            id: rv_progress
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(10)
            viewclass: 'Row'
            SelectableRecycleBoxLayout:
                default_size: None, dp(56)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(2)

