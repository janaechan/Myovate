<StartSessionScreen>:
    rv: rv
    FloatLayout:
        CustomizedButton:
            id: btn
            text: 'Menu'
            on_release: app.root.drop_down.open(self)
            size_hint: None, None
            size: self.texture_size
            padding: (80, 20)
            pos_hint: ({'top': 1})

        CustomizedLabel:
            text: 'Complete all fields to start a session.'
            size_hint_y: None
            pos_hint: ({'center_x': 0.5, 'top': 0.95})
        CustomizedLabel:
            id: session_name_id
            text: "Session Name"
            pos_hint: ({'center_x': 0.15, 'center_y':0.8})
        TextInput:
            id: session_name_input
            focus: True
            #input_filter: lambda text, from_undo: text[:5 - len(self.text)]
            height: self.minimum_height
            size_hint: 0.3, None
            multiline: False
            pos_hint: ({'center_x': 0.4, 'center_y': 0.8})
        CustomizedLabel:
            id: session_date_id
            text: "Date"
            pos_hint: ({'center_x': 0.15, 'center_y':0.75})
        TextInput:
            id: session_date_input
            text: root.session_date
            focus: True
            #input_filter: lambda text, from_undo: text[:5 - len(self.text)]
            height: self.minimum_height
            size_hint: 0.3, None
            multiline: False
            pos_hint: ({'center_x': 0.4, 'center_y': 0.75})
        CustomizedButton:
            text: 'Add New Sensor'
            pos_hint: ({'center_x': 0.7, 'center_y': 0.75})
            size: self.texture_size
            padding: (60, 15)
            size_hint: None, None
            on_release: root.add_sensor_popup.open()
        RecycleView:
            id: rv
            pos_hint: ({'center_x': 0.5, 'center_y': 0.4})
            size_hint: .9, .5
            scroll_type: ['bars', 'content']
            scroll_wheel_distance: dp(114)
            bar_width: dp(10)
            viewclass: 'StartSessionRow'
            SelectableRecycleBoxLayout:
                id: controller
                key_selection: 'selectable'
                default_size: None, dp(200)
                default_size_hint: 1, None
                size_hint_y: None
                height: self.minimum_height
                orientation: 'vertical'
                spacing: dp(25)
                touch_multiselect: True
        CustomizedButton:
            text: "Start Session"
            pos_hint: ({'center_x': 0.5, 'center_y': 0.05})
            size: self.texture_size
            padding: (80, 20)
            size_hint: None, None
            on_press:
                root.clear_text_input() if session_name_input.text and session_date_input.text and rv.data else Factory.MissingFieldPopup().open()
                #root.manager.get_screen('session_history').insert(session_name_input.text, rv.data)
                #root.manager.get_screen('running_session').insert(session_name_input.text, session_date_input.text, rv.data)
                #app.root.current = "running_session"
                #root.start_session()
                #app.root.get_screen('start_session').insert(sensor_name_input.text, sensor_loc_input.text, but_mapping_input.text) if sensor_name_input.text and sensor_loc_input.text else print('Cannot Calibrate Sensor')

<StartSessionRow>:
    id: row
    orientation: 'vertical'
    canvas.before:
        Color:
            rgba: 0.5, 0.5, 0.5, 1
            #rgba: (.0, 0.9, .1, .3) if self.selected else (0, 0, 0, 1)
        Rectangle:
            size: self.size
            pos: self.pos
    sensor_name: ''
    sensor_loc: ''
    but_mapping: ''
    #need_calibration: ''
    BoxLayout:
        size_hint: [1, 0.2]
        orientation: 'horizontal'
        CustomizedLabel:
            text: 'Sensor Name: ' + root.sensor_name
            #size_hint: [1, .2]
        CustomizedLabel:
            text: 'Sensor Location: ' + root.sensor_loc
        CustomizedLabel:
            text: 'Mapped to: ' + root.but_mapping
        #CustomizedLabel:
        #    text: 'Calibrated? ' + 'NO' if root.need_calibration else 'YES'
    BoxLayout:
        orientation: 'horizontal'
        Graph:
            id: graph
            xlabel: ""
            ylabel: "Level"
            x_ticks_minor: 5
            x_tics_major: 25
            y_ticks_major: 50
            x_grid: True
            y_grid: True
            padding: 5
            pos: root.pos
        BoxLayout:
            orientation: 'vertical'
            size_hint: [0.5, .5]
            CustomizedButton:
                text: "Remove Sensor"
                on_press:
                    Factory.ConfirmDeletePopup(root).open()
            CustomizedButton:
                text: "Edit Sensor"
                on_press:
                    Factory.AddSensorPopup(root).open()
            CustomizedButton:
                text: "START"
                bold: True
                on_press: root.start()
            CustomizedButton:
                text: "STOP"
                bold: True
                on_press: root.stop()

<AddSensorPopup>:
    id: add_sensor_pop
    size_hint: 0.6, 0.6
    auto_dismiss: False
    title: 'Add a Sensor'
    FloatLayout:
        CustomizedLabel:
            id: sensor_name_id
            text: "Sensor Name"
            size_hint_y: None
            pos_hint: ({'center_x': 0.20, 'center_y': 0.80})
        TextInput:
            id: sensor_name_input
            text: root.rv_data[root.index]['sensor_name'] if root.rv_data else ''
            focus: True
            height: self.minimum_height
            size_hint: 0.3, None
            multiline: False
            pos_hint: ({'center_x': 0.55, 'center_y': 0.80})
        CustomizedLabel:
            id: sensor_loc_id
            text: "Sensor Location"
            size_hint_y: None
            pos_hint: ({'center_x': 0.20, 'center_y': 0.65})
        TextInput:
            id: sensor_loc_input
            text: root.rv_data[root.index]['sensor_loc'] if root.rv_data else ''
            focus: True
            height: self.minimum_height
            size_hint: 0.3, None
            multiline: False
            pos_hint: ({'center_x': 0.55, 'center_y': 0.65})
        CustomizedLabel:
            id: but_type_id
            text: "Button Type:"
            size_hint_y: None
            pos_hint: ({'center_x': 0.20, 'center_y': 0.50})
        ToggleButton:
            id: game_pad_toggle
            text: 'Game pad'
            group: 'button_type'
            allow_no_selection: False
            size: self.texture_size
            padding: (20, 5)
            size_hint: None, None
            pos_hint: ({'center_x': 0.70, 'center_y': 0.50})
        ToggleButton:
            id: keyboard_toggle
            text: 'Keyboard'
            group: 'button_type'
            state: 'down'
            allow_no_selection: False
            size: self.texture_size
            padding: (20, 5)
            size_hint: None, None
            pos_hint: ({'center_x': 0.45, 'center_y': 0.50})
        CustomizedLabel:
            id: but_mapping_id
            text: "Map to: "
            size_hint_y: None
            pos_hint: ({'center_x': 0.20, 'center_y': 0.35})
        TextInput:
            id: but_mapping_input
            text: root.rv_data[root.index]['but_mapping'] if root.rv_data else ''
            focus: True
            height: self.minimum_height
            size_hint: 0.3, None
            multiline: False
            input_type: 'text'
            keyboard_suggestions: True
            pos_hint: ({'center_x': 0.555, 'center_y': 0.35})
            on_text: root.on_text()
        CustomizedButton:
            id: dismiss_but
            text: 'Cancel'
            size: self.texture_size
            padding: (20, 10)
            size_hint: None, None
            pos_hint: ({'center_x': 0.30, 'center_y': 0.15})
            on_press:
                root.cancel_adding_sensor()
        CustomizedButton:
            text: 'Calibrate Sensor'
            size: self.texture_size
            padding: (20, 10)
            size_hint: None, None
            pos_hint: ({'center_x': 0.70, 'center_y': 0.15})
            on_press:
                app.root.get_screen('start_session').insert(sensor_name_input.text, sensor_loc_input.text, but_mapping_input.text) if sensor_name_input.text and sensor_loc_input.text and but_mapping_input.text else print('Cannot Calibrate Sensor')
                root.clear_text_input() if sensor_name_input.text and sensor_loc_input.text and but_mapping_input.text else Factory.MissingFieldPopup().open()

<ConfirmDeletePopup>:
    id: confirm_delete_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'Confirm Deletion'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    FloatLayout:
        CustomizedLabel:
            text: "Confirm removing sensor:"
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.5}

        CustomizedButton:
            pos_hint: {'center_x': 0.25, 'center_y': 0.15}
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'Yes'
            on_press:
                confirm_delete_popup.dismiss()
                confirm_delete_popup.remove()
        CustomizedButton:
            pos_hint: {'center_x': 0.75, 'center_y': 0.15}
            size: self.parent.width/2, self.parent.height/5
            size_hint: None, None
            text: 'No'
            on_press:
                confirm_delete_popup.dismiss()

<MissingFieldPopup>:
    id: missing_field_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'Fields Incomplete'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    FloatLayout:
        CustomizedLabel:
            text: "Please fill in all fields."
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}

        CustomizedButton:
            pos: (self.parent.pos[0], self.parent.pos[1])
            size: self.parent.width, self.parent.height/5
            size_hint: None, None
            text: 'OK'
            on_press:
                missing_field_popup.dismiss()

<AddArduinoPopup>:
    id: add_arduino_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'Connect Your Arduino'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    FloatLayout:
        CustomizedLabel:
            text: 'Find your Arduino to connect to.'
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}

        CustomizedButton:
            pos: (self.parent.pos[0], self.parent.pos[1])
            size: self.parent.width, self.parent.height/5
            size_hint: None, None
            text: 'Find Arduino'
            on_press:
                # root.find_arduino_result()
                add_arduino_popup.dismiss()
                Factory.ArduinoOptionsPopup(root.arduino, root.arduino.find_arduino()).open()

<ArduinoOptionsPopup>:
    id: arduino_options_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    arduinos: arduinos
    title: 'Connect Your Arudino'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    BoxLayout:
        id: layout2
        orientation: 'vertical'
        CustomizedLabel:
            size_hint: 1, 0.1
            text: 'Choose your Arduino'
        BoxLayout:
            id: arduinos
            orientation: 'vertical'
        Label:
            size_hint: 1, 0.1
        CustomizedButton:
            text: 'Submit'
            size_hint: 1, 0.1
            on_press:
                root.update_arduino()

<NoArduinoFoundPopup>:
    id: no_arduino_found_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'No Arduino Found'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    BoxLayout:
        CustomizedLabel:
            text: "No Arduino Found, please check connection and try again"
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}

        CustomizedButton:
            pos: (self.parent.pos[0], self.parent.pos[1])
            size: self.parent.width, self.parent.height/5
            size_hint: None, None
            text: 'OK'
            on_press:
                no_arduino_found_popup.dismiss()

<ArduinoConnectedPopup>:
    id: arduino_connected_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'Connected!'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    FloatLayout:
        CustomizedLabel:
            text: "Connected to Arduino Sucessfully!\nPress OK to continue with your session by adding sensors."
            halign: "center"
            pos_hint: {'center_x': 0.5, 'center_y': 0.6}

        CustomizedButton:
            pos: (self.parent.pos[0], self.parent.pos[1])
            size: self.parent.width, self.parent.height/5
            size_hint: None, None
            text: 'OK'
            on_press:
                arduino_connected_popup.dismiss()

<ArduinoUnsuccessfulPopup>:
    id: arduino_unsuccessful_popup
    size_hint: 0.5, 0.5
    auto_dismiss: False
    title: 'Connection not Successful'
    separator_color: [0 / 255., 0 / 255., 0 / 255., 1.]
    BoxLayout:
        orientation: 'vertical'
        CustomizedLabel:
            text: "Connection to Arduino Unsuccessful.\nPress RESTART to find Arduinos again\nPress BACK to choose a different Arduino\nPress CANCEL to cancel the session "

        CustomizedButton:
            text: 'RESTART'
            on_press:
                arduino_unsuccessful_popup.dismiss()
                Factory.AddArduinoPopup(root.arduino).open()
        CustomizedButton:
            text: 'BACK'
            on_press:
                arduino_unsuccessful_popup.dismiss()
                Factory.ArduinoOptionsPopup(root.arduino, root.arduino_ops).open()
        CustomizedButton:
            text: 'CANCEL'
            on_press:
                arduino_unsuccessful_popup.dismiss()
                app.root.current='main'
